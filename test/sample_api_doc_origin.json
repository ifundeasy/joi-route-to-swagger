{
  "openapi": "3.0.1",
  "info": {
    "description": "Helps to CRUD hero information.",
    "version": "1.0.0",
    "title": "Hero API Docs"
  },
  "servers": [
    {
      "url": "http://localhost/api"
    }
  ],
  "tags": [
    {
      "name": "hero",
      "description": "Hero related APIs"
    }
  ],
  "paths": {
    "/hero/": {
      "get": {
        "tags": [
          "hero"
        ],
        "summary": "List",
        "description": "",
        "parameters": [
          {
            "description": "Hero ID (Example: 621)",
            "name": "heroId",
            "example": "621",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "sort",
            "schema": {
              "enum": [
                "createdAt",
                "updatedAt"
              ],
              "default": "createdAt",
              "type": "string",
              "nullable": true
            },
            "description": "",
            "in": "query"
          },
          {
            "name": "direction",
            "schema": {
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc",
              "type": "string"
            },
            "description": "",
            "in": "query"
          },
          {
            "name": "limit",
            "schema": {
              "multipleOf": 10,
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "type": "integer"
            },
            "description": "",
            "in": "query"
          },
          {
            "name": "page",
            "schema": {
              "maximum": 10,
              "exclusiveMaximum": true,
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer"
            },
            "description": "",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Normal Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Status Code",
                      "type": "string",
                      "example": "10000000"
                    },
                    "data": {
                      "required": [
                        "totalCount",
                        "page"
                      ],
                      "type": "object",
                      "properties": {
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "description": "Unique id of hero",
                                "type": "string",
                                "example": "59ba1f3c2e9787247e29da9b"
                              },
                              "updatedAt": {
                                "description": "Data creation time",
                                "type": "string",
                                "example": "2017-09-14T06:18:36.786Z"
                              },
                              "createdAt": {
                                "description": "Data last update time",
                                "type": "string",
                                "example": "2017-09-14T06:18:36.786Z"
                              },
                              "nickName": {
                                "description": "Nick name",
                                "type": "string",
                                "example": "Ken"
                              },
                              "gender": {
                                "description": "Gender",
                                "type": "string",
                                "example": "Male"
                              },
                              "avatar": {
                                "description": "Hero avatar",
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "updatedAt",
                              "createdAt",
                              "nickName",
                              "gender"
                            ],
                            "additionalProperties": false
                          },
                          "description": ""
                        },
                        "totalCount": {
                          "description": "Total number of records",
                          "type": "integer",
                          "example": 2
                        },
                        "page": {
                          "description": "Page Number",
                          "type": "integer",
                          "example": 1
                        }
                      },
                      "additionalProperties": false,
                      "description": ""
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "500": {
            "description": "When Server takes a nap.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hero"
        ],
        "summary": "Create",
        "description": "",
        "parameters": [],
        "responses": {
          "500": {
            "description": "When Server takes a nap.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Hero profile",
                "properties": {
                  "nickName": {
                    "maxLength": 20,
                    "minLength": 3,
                    "pattern": "^[a-z]+$",
                    "description": "Hero Nickname",
                    "type": "string",
                    "example": "鹄思乱想"
                  },
                  "avatar": {
                    "format": "uri",
                    "type": "string",
                    "description": ""
                  },
                  "icon": {
                    "type": "string",
                    "description": ""
                  },
                  "email": {
                    "format": "email",
                    "type": "string",
                    "description": ""
                  },
                  "ip": {
                    "type": "string",
                    "oneOf": [
                      {
                        "format": "ipv4"
                      },
                      {
                        "format": "ipv6"
                      }
                    ],
                    "description": ""
                  },
                  "hostname": {
                    "format": "hostname",
                    "type": "string",
                    "description": ""
                  },
                  "gender": {
                    "enum": [
                      "Male",
                      "Female"
                    ],
                    "type": "string",
                    "description": ""
                  },
                  "height": {
                    "type": "number",
                    "description": ""
                  },
                  "birthday": {
                    "format": "date-time",
                    "type": "string",
                    "description": ""
                  },
                  "birthTime": {
                    "type": "integer",
                    "description": ""
                  },
                  "skills": {
                    "maxItems": 3,
                    "minItems": 1,
                    "uniqueItems": true,
                    "description": "Skills",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Skill Name",
                              "type": "string",
                              "example": "teleport"
                            },
                            "level": {
                              "description": "Skill Level",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "retired": {
                    "type": "boolean",
                    "description": ""
                  }
                },
                "required": [
                  "nickName",
                  "avatar"
                ],
                "additionalProperties": true
              }
            }
          }
        }
      }
    },
    "/hero/{id}": {
      "post": {
        "tags": [
          "hero"
        ],
        "summary": "Update",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "path",
            "description": ""
          }
        ],
        "responses": {
          "500": {
            "description": "When Server takes a nap.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "description": "Hero profile",
                "properties": {
                  "avatar": {
                    "format": "uri",
                    "type": "string",
                    "description": ""
                  },
                  "icon": {
                    "type": "string",
                    "description": ""
                  },
                  "email": {
                    "format": "email",
                    "type": "string",
                    "description": ""
                  },
                  "height": {
                    "type": "number",
                    "description": ""
                  },
                  "skills": {
                    "maxItems": 3,
                    "minItems": 1,
                    "uniqueItems": true,
                    "description": "Skills",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Skill Name",
                              "type": "string",
                              "example": "teleport"
                            },
                            "level": {
                              "description": "Skill Level",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "retired": {
                    "type": "boolean",
                    "description": ""
                  },
                  "certificate": {
                    "format": "binary",
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "avatar"
                ],
                "additionalProperties": true
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "hero"
        ],
        "summary": "Open",
        "description": "",
        "parameters": [
          {
            "description": "Hero Id (Example: 1)",
            "name": "id",
            "required": true,
            "example": 1,
            "schema": {
              "type": "number"
            },
            "in": "path"
          }
        ],
        "responses": {
          "500": {
            "description": "When Server takes a nap.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hero/deprecated/{id}": {
      "get": {
        "tags": [
          "hero"
        ],
        "summary": "Deprecated api",
        "description": "",
        "parameters": [
          {
            "description": "Hero Id (Example: 1)",
            "name": "id",
            "required": true,
            "example": 1,
            "schema": {
              "type": "number"
            },
            "in": "path"
          }
        ],
        "responses": {
          "500": {
            "description": "When Server takes a nap.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "code",
          "err"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "err": {
            "type": "string"
          }
        }
      }
    }
  }
}